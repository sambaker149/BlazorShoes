@page "/Addresses/Index"
@using System.ComponentModel.DataAnnotations;
@inject AddressService addressService
@inject AddressesController controller;

<h1 class="text-center text-info mb-5">Manage Customer Addresses</h1>
@*<p>
    <a class="btn btn-primary" href="Addresses/Create">Add New Address</a>
</p>*@

@*<input type="button" @onclick="AddAddress" class="btn form-control">Add Address</input>*@

<EditForm Model="@address" OnValidSubmit="@AddAddress">

    <h2 class="mb-3">New Address Form</h2>

    <DataAnnotationsValidator />
    <ValidationSummary />

    <table class="table table-bordered table-primary">
        <thead>
            <tr>
                <th style="width:100px;">House No</th>
                <th>House Name</th>
                <th>Road Name</th>
                <th>Town</th>
                <th>Postcode</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td style="width:100px;">
                    <InputNumber @bind-Value="address.HouseNumber" class="form-control" />
                </td>
                <td>
                    <InputText @bind-Value="address.HouseName" class="form-control" />
                </td>
                <td>
                    <InputText @bind-Value="address.RoadName" class="form-control" />
                </td>
                <td>
                    <InputText @bind-Value="address.PostTown" class="form-control" />
                </td>
                <td>
                    <InputText @bind-Value="address.Postcode" class="form-control" />
                </td>
            </tr>
        </tbody>
    </table>

    <button type="submit" class="btn btn-success">Add New Address</button>
    <NavLink href="@($"addresses/create")" class="btn btn-primary">
        Add Address Page
    </NavLink>
</EditForm>

<h2 class="mt-5">Current Address List</h2>

@*
    This table supports updating and deleting but the update
    does not occur with client side data validation.
*@

<table class="table table-bordered">
    <thead>
        <tr class="bg-info">
            <th class="text-center" style="width:100px;">House No</th>
            <th>House Name</th>
            <th>Road Name</th>
            <th>Town</th>
            <th>Postcode</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Addresses)
        {
            <tr>
                <td class="text-center">
                    <input @bind="item.HouseNumber" type="number" class="form-control" />
                </td>
                <td>
                    <input @bind="item.HouseName" class="form-control" />
                </td>
                <td>
                    <input @bind="item.RoadName" class="form-control" />
                </td>
                <td>
                    <input @bind="item.PostTown" class="form-control" />
                </td>
                <td>
                    <input @bind="item.Postcode" class="form-control" />
                </td>
                <td style="width:230px;">
                    <input type="button" class="btn btn-success"
                        @onclick="(() => UpdateAddress(item))" value="Update" />
                    
                    <NavLink href="@($"addresses/edit/{item.AddressId}")" class="btn btn-primary">
                        Edit
                    </NavLink>
                    
                    <input type="button" class="btn btn-danger"
                        @onclick="(() => DeleteAddress(item.AddressId))" value="Delete"/>
                </td>
            </tr>
        }
    </tbody>
</table>


@code
{
    // For Service
    public List<Address> Addresses { get; set; }
    
    // For API Controller
    public IEnumerable<Address> AddressList { get; set; }

    private Address address { get; set; } = new();

    //private AddressesController controller;

    protected async override void OnInitialized()
    {
        await GetAddresses();
    }

    public void AddAddress()
    {
        addressService.CreateAddress(address);
        GetAddresses();
        this.StateHasChanged();
    }

    public void DeleteAddress(int id)
    {
        addressService.RemoveAddress(id);
        GetAddresses();
        this.StateHasChanged();
    }

    public async Task GetAddresses()
    {
         //Addresses = await controller.GetAddresses();
        Addresses = addressService.GetAddresses();
    }

    public async Task GetAddressesAsync()
    {
        // This line will not compile
        AddressList = await controller.GetAddresses();
    }

    public void UpdateAddress(Address newAddress)
    {
        addressService.UpdateAddress(newAddress);
         GetAddresses();
    }
}