@page "/addresses/create"
@page "/addresses/edit/{id:int}"
@inject AddressesController controller
@inject AddressService addressService
@inject NavigationManager navigationManager

<div class="row mt-2 mb-5">

    <h3 class="card-title text-info mb-3 ml-3">@title Address</h3>
    <div class="col-md-6">
        <div class="card bg-info">
            <div class="card-body">
                <EditForm Model="address" OnValidSubmit="UpsertAddress">
                    
                    <DataAnnotationsValidator></DataAnnotationsValidator>
                    <ValidationSummary></ValidationSummary>
                    
                    <div>
                        <label class="form-label">House No:</label>
                        <InputNumber class="form-control" @bind-Value="address.HouseNumber"></InputNumber>
                        @* To do separate messages for each field*@
                        @*<ValidationMessage For="()=>address.HouseNumber"></ValidationMessage>*@
                    </div>
                    <div>
                        <label class="form-label">House Name:</label>
                        <InputText class="form-control" @bind-Value="address.HouseName"></InputText>
                    </div>
                    <div>
                        <label class="form-label">Road Name:</label>
                        <InputText class="form-control" @bind-Value="address.RoadName"></InputText>
                    </div>
                    <div>
                        <label class="form-label">Town:</label>
                        <InputText class="form-control" @bind-Value="address.PostTown"></InputText>
                    </div>
                    <div>
                        <label class="form-label">Post Code:</label>
                        <InputText class="form-control" @bind-Value="address.Postcode"></InputText>
                    </div>
                    <div class="mt-3 float-end">
                        <button class="btn btn-success">Save Changes</button>
                        <NavLink href="Addresses" class="btn btn-secondary">Back to List</NavLink>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>

</div>

@code 
{
    [Parameter]
    public int? id { get; set; }

    private Address address { get; set; } = new();

    // Default title and method.  Create or Update

    private string title { get; set; } = "Create";

    protected override async Task OnInitializedAsync()
    {
        if(id == null)
        {
            title = "Create";
            address = new Address();
        }
        else
        {
            title = "Edit";
            //address = await controller.GetAddress(Id.Value);
            address = addressService.GetAddress(id.Value);
        }
    }

    private void GotoAddressTable()
    {
        navigationManager.NavigateTo("addresses");
    }

    private async Task UpsertAddress()
    {
        if(id == null)
            await controller.PostAddress(address);
        else
            await controller.PutAddress(id.Value, address);

        GotoAddressTable();
    }
}
